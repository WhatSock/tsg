/*!
Toggle Generator R2.4
Copyright 2010-2018 Bryan Garaventa (WhatSock.com)
Part of AccDC, a Cross-Browser JavaScript accessibility API, distributed under the terms of the Open Source Initiative OSI - MIT License

To avoid backwards compatible screen reader support issues, ARIA Toggle and ARIA Checkbox Rules :
IMG : Use aria-label to set screen reader text.
INPUT : Use both aria-label and Title to set screen reader text.
All tags that support innerHTML: Use innerText (whether offscreen or visible) to set screen reader text.
Image links (A tag with embedded IMG): Use innerText and add alt="" to the IMG tag to set screen reader text. (This is required for iOS support using Voiceover)
	*/
$A.Toggle=function(e,n){n=n||{};var a="string"==typeof e?$A.getEl(e):e,o=this,t=$A.getAttr(a,"role"),r="checkbox"==t||"switch"==t,l=$A.createEl("span",null,$A.sraCSS),s=!!n.suppressARIAPressed;function p(e){var t=!0;n.callback&&"function"==typeof n.callback&&(t=n.callback.apply(a,[e])),t&&(!n.noToggle&&n.noARIA?l.innerHTML=e?"&nbsp;"+n.roleText+"&nbsp;"+n.stateText:"&nbsp;"+n.roleText:n.noToggle||s||$A.setAttr(a,r?"aria-checked":"aria-pressed",e?"true":"false"),o.state=e)}!n.noToggle&&n.noARIA&&(n.roleText||(n.roleText="Toggle"),n.stateText||(n.stateText="Pressed"),a.appendChild(l));var i=a.nodeName.toLowerCase();"input"==i&&("button"==$A.getAttr(a,"type")||"image"==$A.getAttr(a,"type"))||"a"==i&&$A.getAttr(a,"href")||"button"==i||$A.setAttr(a,"tabindex","0"),$A.unbind(a,"click keydown"),$A.bind(a,{keydown:function(e){var t=e.which||e.keyCode;13!=t&&32!=t||(e.preventDefault(),e.stopPropagation(),"input"==a.nodeName.toLowerCase()&&"image"==a.type&&32==t||$A.trigger(a,"click"))},click:function(e){p.apply(a,[!o.state]),e.preventDefault()}}),o.set=function(e){p.apply(a,[e])},n.noToggle||p.apply(a,[!!n.state])};